
    Задание 1
        1.1 Создать текстовый файл и заполнить его данными(латинскими словами).
        1.2 Написать программу, которая считывает посимвольно данные с файла и подсчитывает количество повторений каждой буквы в нем.
        1.3 Для подсчета использовать коллекцию Map<Character, Integer>. Ключам соответствуют буквы датинского алфавита,
            значениям - количество их повторений.
        1.4 После подсчета вывести полученные данные на экран. Например:
            a - 10
            b - 7
            c - 13
            ...
        1.5 Закрыть потоки. НЕ ИСПОЛЬЗОВАТЬ try-with-recources.

    Задание 2
        2.1 Написать программу, которая копирует данные из одного текстового файла в другой.
        2.2 Пользователь вводит в консоль два параметра - путь копируемого файла и путь у файлу, в который копируются данные.
        2.3 Для ввода данных с консоли использовать BufferedReader.
        2.4 Создать текстовые файлы для примера и протестировать работу программы.
        2.5 Закрыть потоки. Использовать конструкцию try-with-recources. Проанализировать закрытие потоков по сравнению
            с предыдущим примером.

    Задание 3
        3.1 Написать программу, которая авторизации пользователя.
        3.2 Создать текстовый файл и заполнить его данными в формате "login password". В каждой строке записано имя пользователя,
            один пробел и пароль. Например:
            User1 23od3dF
            User23 2hD4hfed4
            Username3 45Jcc$
            ...
        3.3 В начале работы программа запрашивает пользователя ввести его логин. Если логина не существует - дать пользователю
            выбор зарегистрироваться или выйти из програмы. Если пользователь выберет пункт регистрации - считать имя и пароль
            и дозаписать его в текстовый файл. Если пользователь выбрал пункт выхода - закончить работу программы.
        3.4 Если имя пользователя существует в файле - запросить пароль пользователя. Проверить соответствует ли пароль
            введенному ранее логину. Если пароль соответствует логину вывести в консоль "Добро пожаловать, <имя пользователя>".
            Если пароль не совпадает - пользователь имеет 2 попытки повторного ввода пароля, по истечению которых вывести на экран
            сообщение "Пользователь <имя пользователя> заблокирован!", удалить его данные с файла, завершить работу программы.
        3.5 Закрыть потоки. Использовать конструкцию try-with-recources.

